
==> Audit <==
|---------|------|----------|------------|---------|---------------------|----------|
| Command | Args | Profile  |    User    | Version |     Start Time      | End Time |
|---------|------|----------|------------|---------|---------------------|----------|
| start   |      | minikube | amanchopra | v1.33.1 | 03 Oct 24 23:41 IST |          |
|---------|------|----------|------------|---------|---------------------|----------|


==> Last Start <==
Log file created at: 2024/10/03 23:41:27
Running on machine: TZIN-L-223
Binary: Built with gc go1.22.1 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I1003 23:41:27.051144 3471061 out.go:291] Setting OutFile to fd 1 ...
I1003 23:41:27.051350 3471061 out.go:343] isatty.IsTerminal(1) = true
I1003 23:41:27.051355 3471061 out.go:304] Setting ErrFile to fd 2...
I1003 23:41:27.051361 3471061 out.go:343] isatty.IsTerminal(2) = true
I1003 23:41:27.051595 3471061 root.go:338] Updating PATH: /home/amanchopra/.minikube/bin
W1003 23:41:27.051737 3471061 root.go:314] Error reading config file at /home/amanchopra/.minikube/config/config.json: open /home/amanchopra/.minikube/config/config.json: no such file or directory
I1003 23:41:27.052582 3471061 out.go:298] Setting JSON to false
I1003 23:41:27.073136 3471061 start.go:129] hostinfo: {"hostname":"TZIN-L-223","uptime":713674,"bootTime":1727265413,"procs":485,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"20.04","kernelVersion":"5.15.0-122-generic","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"97bb8722-bc84-4357-86d2-c35664428deb"}
I1003 23:41:27.073239 3471061 start.go:139] virtualization: kvm host
I1003 23:41:27.074608 3471061 out.go:177] 😄  minikube v1.33.1 on Ubuntu 20.04
W1003 23:41:27.075800 3471061 preload.go:294] Failed to list preload files: open /home/amanchopra/.minikube/cache/preloaded-tarball: no such file or directory
I1003 23:41:27.075926 3471061 notify.go:220] Checking for updates...
I1003 23:41:27.075978 3471061 driver.go:392] Setting default libvirt URI to qemu:///system
I1003 23:41:27.076009 3471061 global.go:112] Querying for installed drivers using PATH=/home/amanchopra/.minikube/bin:/home/amanchopra/.deno/bin:/home/amanchopra/.deno/bin:/home/amanchopra/.nvm/versions/node/v18.12.1/bin:/home/amanchopra/.cargo/bin:/home/amanchopra/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/usr/lib/jvm/jdk-11/bin:/usr/local/go/bin:/home/amanchopra/.local/bin:/usr/lib/jvm/jdk-11/bin:/usr/local/go/bin:/home/amanchopra/.local/bin
I1003 23:41:27.082054 3471061 global.go:133] none default: false priority: 4, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:running the 'none' driver as a regular user requires sudo permissions Reason: Fix: Doc: Version:}
I1003 23:41:27.082167 3471061 global.go:133] podman default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I1003 23:41:27.082184 3471061 global.go:133] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1003 23:41:27.082297 3471061 global.go:133] kvm2 default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "virsh": executable file not found in $PATH Reason: Fix:Install libvirt Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/ Version:}
I1003 23:41:27.082372 3471061 global.go:133] qemu2 default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I1003 23:41:27.082483 3471061 global.go:133] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I1003 23:41:27.082560 3471061 global.go:133] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in $PATH Reason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I1003 23:41:27.108590 3471061 docker.go:122] docker version: linux-26.1.0:Docker Engine - Community
I1003 23:41:27.108728 3471061 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1003 23:41:27.203342 3471061 info.go:266] docker info: {ID:c2eeac6d-a762-40eb-a1c3-d62a3d1803fc Containers:10 ContainersRunning:9 ContainersPaused:0 ContainersStopped:1 Images:11 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:81 OomKillDisable:true NGoroutines:103 SystemTime:2024-10-03 23:41:27.188924923 +0530 IST LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:1 KernelVersion:5.15.0-122-generic OperatingSystem:Ubuntu 20.04.6 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:33384718336 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:TZIN-L-223 Labels:[] ExperimentalBuild:false ServerVersion:26.1.0 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.14.0] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.26.1]] Warnings:<nil>}}
I1003 23:41:27.203494 3471061 docker.go:295] overlay module found
I1003 23:41:27.203523 3471061 global.go:133] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1003 23:41:27.203545 3471061 driver.go:314] not recommending "ssh" due to default: false
I1003 23:41:27.203570 3471061 driver.go:349] Picked: docker
I1003 23:41:27.203587 3471061 driver.go:350] Alternatives: [ssh]
I1003 23:41:27.203594 3471061 driver.go:351] Rejects: [none podman kvm2 qemu2 virtualbox vmware]
I1003 23:41:27.204454 3471061 out.go:177] ✨  Automatically selected the docker driver
I1003 23:41:27.205447 3471061 start.go:297] selected driver: docker
I1003 23:41:27.205455 3471061 start.go:901] validating driver "docker" against <nil>
I1003 23:41:27.205470 3471061 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1003 23:41:27.205619 3471061 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I1003 23:41:27.295507 3471061 info.go:266] docker info: {ID:c2eeac6d-a762-40eb-a1c3-d62a3d1803fc Containers:10 ContainersRunning:9 ContainersPaused:0 ContainersStopped:1 Images:11 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:81 OomKillDisable:true NGoroutines:103 SystemTime:2024-10-03 23:41:27.275912528 +0530 IST LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:1 KernelVersion:5.15.0-122-generic OperatingSystem:Ubuntu 20.04.6 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:33384718336 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:TZIN-L-223 Labels:[] ExperimentalBuild:false ServerVersion:26.1.0 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.14.0] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.26.1]] Warnings:<nil>}}
I1003 23:41:27.295741 3471061 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I1003 23:41:27.315334 3471061 start_flags.go:393] Using suggested 7900MB memory alloc based on sys=31838MB, container=31838MB
I1003 23:41:27.315576 3471061 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I1003 23:41:27.316598 3471061 out.go:177] 📌  Using Docker driver with root privileges
I1003 23:41:27.317238 3471061 cni.go:84] Creating CNI manager for ""
I1003 23:41:27.317260 3471061 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1003 23:41:27.317281 3471061 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I1003 23:41:27.317399 3471061 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/amanchopra:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I1003 23:41:27.318401 3471061 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I1003 23:41:27.319250 3471061 cache.go:121] Beginning downloading kic base image for docker with docker
I1003 23:41:27.319923 3471061 out.go:177] 🚜  Pulling base image v0.0.44 ...
I1003 23:41:27.320965 3471061 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I1003 23:41:27.321064 3471061 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon
I1003 23:41:27.343797 3471061 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e to local cache
I1003 23:41:27.344035 3471061 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local cache directory
I1003 23:41:27.344176 3471061 image.go:118] Writing gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e to local cache
I1003 23:41:27.531343 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/last_update_check: {Name:mk5cf671eed1d4d3745418fcd6abd8bfde0be648 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:41:27.538284 3471061 out.go:177] 🎉  minikube 1.34.0 is available! Download it: https://github.com/kubernetes/minikube/releases/tag/v1.34.0
I1003 23:41:27.538984 3471061 out.go:177] 💡  To disable this notice, run: 'minikube config set WantUpdateNotification false'

I1003 23:41:28.047690 3471061 preload.go:119] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.30.0/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4
I1003 23:41:28.047756 3471061 cache.go:56] Caching tarball of preloaded images
I1003 23:41:28.047957 3471061 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I1003 23:41:28.050424 3471061 out.go:177] 💾  Downloading Kubernetes v1.30.0 preload ...
I1003 23:41:28.051042 3471061 preload.go:237] getting checksum for preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 ...
I1003 23:41:28.482775 3471061 download.go:107] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.30.0/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4?checksum=md5:00b6acf85a82438f3897c0a6fafdcee7 -> /home/amanchopra/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4
I1003 23:42:55.494217 3471061 preload.go:248] saving checksum for preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 ...
I1003 23:42:55.494519 3471061 preload.go:255] verifying checksum of /home/amanchopra/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 ...
I1003 23:42:56.983759 3471061 cache.go:59] Finished verifying existence of preloaded tar for v1.30.0 on docker
I1003 23:42:56.984179 3471061 profile.go:143] Saving config to /home/amanchopra/.minikube/profiles/minikube/config.json ...
I1003 23:42:56.984205 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/profiles/minikube/config.json: {Name:mk4c097012bdea8a638ecc37fdd7b1fb11455b8a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:43:36.440783 3471061 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e as a tarball
I1003 23:43:36.440799 3471061 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e from local cache
I1003 23:44:01.636363 3471061 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e from cached tarball
I1003 23:44:01.636403 3471061 cache.go:194] Successfully downloaded all kic artifacts
I1003 23:44:01.636461 3471061 start.go:360] acquireMachinesLock for minikube: {Name:mkecd04c86990a3e36f72e6f11de0d6831997bbe Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I1003 23:44:01.636565 3471061 start.go:364] duration metric: took 82.59µs to acquireMachinesLock for "minikube"
I1003 23:44:01.636595 3471061 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/amanchopra:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I1003 23:44:01.638836 3471061 start.go:125] createHost starting for "" (driver="docker")
I1003 23:44:01.640514 3471061 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=7900MB) ...
I1003 23:44:01.641044 3471061 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I1003 23:44:01.641068 3471061 client.go:168] LocalClient.Create starting
I1003 23:44:01.641214 3471061 main.go:141] libmachine: Creating CA: /home/amanchopra/.minikube/certs/ca.pem
I1003 23:44:01.959286 3471061 main.go:141] libmachine: Creating client certificate: /home/amanchopra/.minikube/certs/cert.pem
I1003 23:44:02.236496 3471061 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W1003 23:44:02.268690 3471061 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I1003 23:44:02.268762 3471061 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I1003 23:44:02.268778 3471061 cli_runner.go:164] Run: docker network inspect minikube
W1003 23:44:02.305959 3471061 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I1003 23:44:02.305985 3471061 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I1003 23:44:02.305998 3471061 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I1003 23:44:02.306099 3471061 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1003 23:44:02.344150 3471061 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc001715830}
I1003 23:44:02.344180 3471061 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I1003 23:44:02.344241 3471061 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I1003 23:44:02.510608 3471061 network_create.go:108] docker network minikube 192.168.49.0/24 created
I1003 23:44:02.510634 3471061 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I1003 23:44:02.510721 3471061 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I1003 23:44:02.582835 3471061 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I1003 23:44:02.617149 3471061 oci.go:103] Successfully created a docker volume minikube
I1003 23:44:02.617238 3471061 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -d /var/lib
I1003 23:44:03.745770 3471061 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -d /var/lib: (1.128489755s)
I1003 23:44:03.745792 3471061 oci.go:107] Successfully prepared a docker volume minikube
I1003 23:44:03.745810 3471061 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I1003 23:44:03.745833 3471061 kic.go:194] Starting extracting preloaded images to volume ...
I1003 23:44:03.745908 3471061 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/amanchopra/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -I lz4 -xf /preloaded.tar -C /extractDir
I1003 23:44:09.505984 3471061 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/amanchopra/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e -I lz4 -xf /preloaded.tar -C /extractDir: (5.760037168s)
I1003 23:44:09.506012 3471061 kic.go:203] duration metric: took 5.760178435s to extract preloaded images to volume ...
W1003 23:44:09.507538 3471061 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
I1003 23:44:09.507665 3471061 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I1003 23:44:09.616605 3471061 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=7900mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e
I1003 23:44:10.380655 3471061 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I1003 23:44:10.502784 3471061 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1003 23:44:10.586851 3471061 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I1003 23:44:10.709559 3471061 oci.go:144] the created container "minikube" has a running status.
I1003 23:44:10.709584 3471061 kic.go:225] Creating ssh key for kic: /home/amanchopra/.minikube/machines/minikube/id_rsa...
I1003 23:44:12.619485 3471061 kic_runner.go:191] docker (temp): /home/amanchopra/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I1003 23:44:12.661188 3471061 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1003 23:44:12.688616 3471061 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I1003 23:44:12.688630 3471061 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I1003 23:44:12.795150 3471061 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I1003 23:44:12.831887 3471061 machine.go:94] provisionDockerMachine start ...
I1003 23:44:12.831978 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:12.893049 3471061 main.go:141] libmachine: Using SSH client type: native
I1003 23:44:12.893427 3471061 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I1003 23:44:12.893437 3471061 main.go:141] libmachine: About to run SSH command:
hostname
I1003 23:44:13.071076 3471061 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I1003 23:44:13.071096 3471061 ubuntu.go:169] provisioning hostname "minikube"
I1003 23:44:13.071189 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:13.120791 3471061 main.go:141] libmachine: Using SSH client type: native
I1003 23:44:13.121060 3471061 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I1003 23:44:13.121072 3471061 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I1003 23:44:13.302984 3471061 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I1003 23:44:13.303149 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:13.332203 3471061 main.go:141] libmachine: Using SSH client type: native
I1003 23:44:13.332441 3471061 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I1003 23:44:13.332458 3471061 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I1003 23:44:13.499634 3471061 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I1003 23:44:13.499653 3471061 ubuntu.go:175] set auth options {CertDir:/home/amanchopra/.minikube CaCertPath:/home/amanchopra/.minikube/certs/ca.pem CaPrivateKeyPath:/home/amanchopra/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/amanchopra/.minikube/machines/server.pem ServerKeyPath:/home/amanchopra/.minikube/machines/server-key.pem ClientKeyPath:/home/amanchopra/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/amanchopra/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/amanchopra/.minikube}
I1003 23:44:13.499670 3471061 ubuntu.go:177] setting up certificates
I1003 23:44:13.499680 3471061 provision.go:84] configureAuth start
I1003 23:44:13.499757 3471061 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1003 23:44:13.526908 3471061 provision.go:143] copyHostCerts
I1003 23:44:13.527020 3471061 exec_runner.go:151] cp: /home/amanchopra/.minikube/certs/ca.pem --> /home/amanchopra/.minikube/ca.pem (1086 bytes)
I1003 23:44:13.527254 3471061 exec_runner.go:151] cp: /home/amanchopra/.minikube/certs/cert.pem --> /home/amanchopra/.minikube/cert.pem (1131 bytes)
I1003 23:44:13.527411 3471061 exec_runner.go:151] cp: /home/amanchopra/.minikube/certs/key.pem --> /home/amanchopra/.minikube/key.pem (1679 bytes)
I1003 23:44:13.527504 3471061 provision.go:117] generating server cert: /home/amanchopra/.minikube/machines/server.pem ca-key=/home/amanchopra/.minikube/certs/ca.pem private-key=/home/amanchopra/.minikube/certs/ca-key.pem org=amanchopra.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I1003 23:44:13.835431 3471061 provision.go:177] copyRemoteCerts
I1003 23:44:13.835503 3471061 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I1003 23:44:13.835554 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:13.869548 3471061 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/amanchopra/.minikube/machines/minikube/id_rsa Username:docker}
I1003 23:44:13.990580 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1086 bytes)
I1003 23:44:14.029951 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/machines/server.pem --> /etc/docker/server.pem (1188 bytes)
I1003 23:44:14.082593 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I1003 23:44:14.123169 3471061 provision.go:87] duration metric: took 623.476789ms to configureAuth
I1003 23:44:14.123206 3471061 ubuntu.go:193] setting minikube options for container-runtime
I1003 23:44:14.123414 3471061 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I1003 23:44:14.123492 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:14.164257 3471061 main.go:141] libmachine: Using SSH client type: native
I1003 23:44:14.165017 3471061 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I1003 23:44:14.165034 3471061 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I1003 23:44:14.318943 3471061 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I1003 23:44:14.318958 3471061 ubuntu.go:71] root file system type: overlay
I1003 23:44:14.319076 3471061 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I1003 23:44:14.319163 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:14.353978 3471061 main.go:141] libmachine: Using SSH client type: native
I1003 23:44:14.354247 3471061 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I1003 23:44:14.354339 3471061 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I1003 23:44:14.566418 3471061 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I1003 23:44:14.566509 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:14.633828 3471061 main.go:141] libmachine: Using SSH client type: native
I1003 23:44:14.634090 3471061 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32782 <nil> <nil>}
I1003 23:44:14.634109 3471061 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I1003 23:44:15.969536 3471061 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-04-30 11:46:26.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-10-03 18:14:14.555017684 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I1003 23:44:15.969561 3471061 machine.go:97] duration metric: took 3.137661015s to provisionDockerMachine
I1003 23:44:15.969574 3471061 client.go:171] duration metric: took 14.328500565s to LocalClient.Create
I1003 23:44:15.969588 3471061 start.go:167] duration metric: took 14.328548896s to libmachine.API.Create "minikube"
I1003 23:44:15.969594 3471061 start.go:293] postStartSetup for "minikube" (driver="docker")
I1003 23:44:15.969611 3471061 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I1003 23:44:15.969689 3471061 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I1003 23:44:15.969741 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:15.998976 3471061 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/amanchopra/.minikube/machines/minikube/id_rsa Username:docker}
I1003 23:44:16.119996 3471061 ssh_runner.go:195] Run: cat /etc/os-release
I1003 23:44:16.125676 3471061 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I1003 23:44:16.125707 3471061 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I1003 23:44:16.125718 3471061 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I1003 23:44:16.125726 3471061 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I1003 23:44:16.125739 3471061 filesync.go:126] Scanning /home/amanchopra/.minikube/addons for local assets ...
I1003 23:44:16.125840 3471061 filesync.go:126] Scanning /home/amanchopra/.minikube/files for local assets ...
I1003 23:44:16.125873 3471061 start.go:296] duration metric: took 156.273198ms for postStartSetup
I1003 23:44:16.126896 3471061 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1003 23:44:16.157517 3471061 profile.go:143] Saving config to /home/amanchopra/.minikube/profiles/minikube/config.json ...
I1003 23:44:16.159896 3471061 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I1003 23:44:16.159951 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:16.201136 3471061 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/amanchopra/.minikube/machines/minikube/id_rsa Username:docker}
I1003 23:44:16.316437 3471061 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I1003 23:44:16.325412 3471061 start.go:128] duration metric: took 14.686554935s to createHost
I1003 23:44:16.325433 3471061 start.go:83] releasing machines lock for "minikube", held for 14.688859513s
I1003 23:44:16.325520 3471061 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I1003 23:44:16.363216 3471061 ssh_runner.go:195] Run: cat /version.json
I1003 23:44:16.363270 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:16.363530 3471061 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I1003 23:44:16.363604 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I1003 23:44:16.400706 3471061 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/amanchopra/.minikube/machines/minikube/id_rsa Username:docker}
I1003 23:44:16.408054 3471061 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32782 SSHKeyPath:/home/amanchopra/.minikube/machines/minikube/id_rsa Username:docker}
I1003 23:44:16.515238 3471061 ssh_runner.go:195] Run: systemctl --version
I1003 23:44:16.797138 3471061 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I1003 23:44:16.802613 3471061 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I1003 23:44:16.863902 3471061 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I1003 23:44:16.864010 3471061 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I1003 23:44:16.914497 3471061 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I1003 23:44:16.914514 3471061 start.go:494] detecting cgroup driver to use...
I1003 23:44:16.914544 3471061 detect.go:196] detected "cgroupfs" cgroup driver on host os
I1003 23:44:16.914640 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I1003 23:44:16.937545 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I1003 23:44:16.956453 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I1003 23:44:16.974038 3471061 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I1003 23:44:16.974117 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I1003 23:44:16.994056 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1003 23:44:17.009127 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I1003 23:44:17.029383 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1003 23:44:17.047064 3471061 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I1003 23:44:17.062686 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I1003 23:44:17.089741 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I1003 23:44:17.111069 3471061 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I1003 23:44:17.131272 3471061 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I1003 23:44:17.145884 3471061 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I1003 23:44:17.163722 3471061 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1003 23:44:17.332664 3471061 ssh_runner.go:195] Run: sudo systemctl restart containerd
I1003 23:44:17.486915 3471061 start.go:494] detecting cgroup driver to use...
I1003 23:44:17.486957 3471061 detect.go:196] detected "cgroupfs" cgroup driver on host os
I1003 23:44:17.487013 3471061 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I1003 23:44:17.517649 3471061 cruntime.go:279] skipping containerd shutdown because we are bound to it
I1003 23:44:17.517733 3471061 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I1003 23:44:17.540116 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I1003 23:44:17.593161 3471061 ssh_runner.go:195] Run: which cri-dockerd
I1003 23:44:17.599191 3471061 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I1003 23:44:17.620561 3471061 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I1003 23:44:17.666046 3471061 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I1003 23:44:17.850566 3471061 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I1003 23:44:18.014033 3471061 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I1003 23:44:18.014164 3471061 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I1003 23:44:18.055629 3471061 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1003 23:44:18.234084 3471061 ssh_runner.go:195] Run: sudo systemctl restart docker
I1003 23:44:18.782072 3471061 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I1003 23:44:18.804023 3471061 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I1003 23:44:18.833089 3471061 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I1003 23:44:19.009520 3471061 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1003 23:44:19.185150 3471061 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1003 23:44:19.330502 3471061 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I1003 23:44:19.353838 3471061 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I1003 23:44:19.379082 3471061 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1003 23:44:19.521265 3471061 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I1003 23:44:19.636637 3471061 start.go:541] Will wait 60s for socket path /var/run/cri-dockerd.sock
I1003 23:44:19.636716 3471061 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I1003 23:44:19.650550 3471061 start.go:562] Will wait 60s for crictl version
I1003 23:44:19.650629 3471061 ssh_runner.go:195] Run: which crictl
I1003 23:44:19.658386 3471061 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I1003 23:44:19.742569 3471061 start.go:578] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  26.1.1
RuntimeApiVersion:  v1
I1003 23:44:19.742672 3471061 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1003 23:44:19.780874 3471061 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1003 23:44:19.824397 3471061 out.go:204] 🐳  Preparing Kubernetes v1.30.0 on Docker 26.1.1 ...
I1003 23:44:19.824524 3471061 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I1003 23:44:19.868726 3471061 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I1003 23:44:19.873628 3471061 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1003 23:44:19.897856 3471061 kubeadm.go:877] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/amanchopra:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I1003 23:44:19.897955 3471061 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I1003 23:44:19.898035 3471061 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1003 23:44:19.938642 3471061 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1003 23:44:19.938669 3471061 docker.go:615] Images already preloaded, skipping extraction
I1003 23:44:19.938745 3471061 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1003 23:44:19.968137 3471061 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1003 23:44:19.968153 3471061 cache_images.go:84] Images are preloaded, skipping loading
I1003 23:44:19.968163 3471061 kubeadm.go:928] updating node { 192.168.49.2 8443 v1.30.0 docker true true} ...
I1003 23:44:19.968268 3471061 kubeadm.go:940] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.30.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I1003 23:44:19.968331 3471061 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I1003 23:44:20.035078 3471061 cni.go:84] Creating CNI manager for ""
I1003 23:44:20.035102 3471061 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1003 23:44:20.035113 3471061 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I1003 23:44:20.035138 3471061 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.30.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I1003 23:44:20.035290 3471061 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.30.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I1003 23:44:20.035369 3471061 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.30.0
I1003 23:44:20.053738 3471061 binaries.go:44] Found k8s binaries, skipping transfer
I1003 23:44:20.053804 3471061 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I1003 23:44:20.068886 3471061 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I1003 23:44:20.114187 3471061 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I1003 23:44:20.162911 3471061 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2150 bytes)
I1003 23:44:20.203766 3471061 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I1003 23:44:20.210467 3471061 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1003 23:44:20.231948 3471061 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1003 23:44:20.421452 3471061 ssh_runner.go:195] Run: sudo systemctl start kubelet
I1003 23:44:20.469488 3471061 certs.go:68] Setting up /home/amanchopra/.minikube/profiles/minikube for IP: 192.168.49.2
I1003 23:44:20.469500 3471061 certs.go:194] generating shared ca certs ...
I1003 23:44:20.469518 3471061 certs.go:226] acquiring lock for ca certs: {Name:mk54fbdd19f4774b208d93319f223def60edd025 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:20.469629 3471061 certs.go:240] generating "minikubeCA" ca cert: /home/amanchopra/.minikube/ca.key
I1003 23:44:20.870567 3471061 crypto.go:156] Writing cert to /home/amanchopra/.minikube/ca.crt ...
I1003 23:44:20.870585 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/ca.crt: {Name:mkea1148833e6b58f4e034ed8fff34274e701e64 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:20.871030 3471061 crypto.go:164] Writing key to /home/amanchopra/.minikube/ca.key ...
I1003 23:44:20.871049 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/ca.key: {Name:mk8cf7c113785d94b9a8798d836e1fc970230f34 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:20.871259 3471061 certs.go:240] generating "proxyClientCA" ca cert: /home/amanchopra/.minikube/proxy-client-ca.key
I1003 23:44:21.462183 3471061 crypto.go:156] Writing cert to /home/amanchopra/.minikube/proxy-client-ca.crt ...
I1003 23:44:21.462200 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/proxy-client-ca.crt: {Name:mkfc7ce920ba17e876807b6fbee07d6144ed77b4 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:21.462686 3471061 crypto.go:164] Writing key to /home/amanchopra/.minikube/proxy-client-ca.key ...
I1003 23:44:21.462697 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/proxy-client-ca.key: {Name:mk90adc926878caf970c6ddfee1d7a0fe4d6b12b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:21.462963 3471061 certs.go:256] generating profile certs ...
I1003 23:44:21.463044 3471061 certs.go:363] generating signed profile cert for "minikube-user": /home/amanchopra/.minikube/profiles/minikube/client.key
I1003 23:44:21.463070 3471061 crypto.go:68] Generating cert /home/amanchopra/.minikube/profiles/minikube/client.crt with IP's: []
I1003 23:44:21.650793 3471061 crypto.go:156] Writing cert to /home/amanchopra/.minikube/profiles/minikube/client.crt ...
I1003 23:44:21.650812 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/profiles/minikube/client.crt: {Name:mk95736973742bdaffa5f03e7c78660ea46be59a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:21.651050 3471061 crypto.go:164] Writing key to /home/amanchopra/.minikube/profiles/minikube/client.key ...
I1003 23:44:21.651058 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/profiles/minikube/client.key: {Name:mk54a040b00f4ca8b1b57df1107e69bfe970ac1b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:21.651184 3471061 certs.go:363] generating signed profile cert for "minikube": /home/amanchopra/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I1003 23:44:21.651217 3471061 crypto.go:68] Generating cert /home/amanchopra/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I1003 23:44:22.162159 3471061 crypto.go:156] Writing cert to /home/amanchopra/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I1003 23:44:22.162178 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mk79f99a66400102a7fcda4095e42413683bbbf9 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:22.162996 3471061 crypto.go:164] Writing key to /home/amanchopra/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I1003 23:44:22.163011 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mkedec6bb9491459f1fb8ab52c2189a32e79c5cd Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:22.163142 3471061 certs.go:381] copying /home/amanchopra/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /home/amanchopra/.minikube/profiles/minikube/apiserver.crt
I1003 23:44:22.163287 3471061 certs.go:385] copying /home/amanchopra/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /home/amanchopra/.minikube/profiles/minikube/apiserver.key
I1003 23:44:22.163383 3471061 certs.go:363] generating signed profile cert for "aggregator": /home/amanchopra/.minikube/profiles/minikube/proxy-client.key
I1003 23:44:22.163410 3471061 crypto.go:68] Generating cert /home/amanchopra/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I1003 23:44:22.399089 3471061 crypto.go:156] Writing cert to /home/amanchopra/.minikube/profiles/minikube/proxy-client.crt ...
I1003 23:44:22.399112 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/profiles/minikube/proxy-client.crt: {Name:mkc2001825219b4cc6bfb877f539e35d4c88d36d Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:22.399400 3471061 crypto.go:164] Writing key to /home/amanchopra/.minikube/profiles/minikube/proxy-client.key ...
I1003 23:44:22.399410 3471061 lock.go:35] WriteFile acquiring /home/amanchopra/.minikube/profiles/minikube/proxy-client.key: {Name:mk815a160400fdef0ea2200f6aca0b7670fa81fa Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1003 23:44:22.399739 3471061 certs.go:484] found cert: /home/amanchopra/.minikube/certs/ca-key.pem (1679 bytes)
I1003 23:44:22.399793 3471061 certs.go:484] found cert: /home/amanchopra/.minikube/certs/ca.pem (1086 bytes)
I1003 23:44:22.399830 3471061 certs.go:484] found cert: /home/amanchopra/.minikube/certs/cert.pem (1131 bytes)
I1003 23:44:22.399899 3471061 certs.go:484] found cert: /home/amanchopra/.minikube/certs/key.pem (1679 bytes)
I1003 23:44:22.400682 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I1003 23:44:22.443720 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I1003 23:44:22.484112 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I1003 23:44:22.522006 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I1003 23:44:22.579751 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I1003 23:44:22.621309 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I1003 23:44:22.664459 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I1003 23:44:22.702233 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I1003 23:44:22.747558 3471061 ssh_runner.go:362] scp /home/amanchopra/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I1003 23:44:22.787078 3471061 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I1003 23:44:22.834115 3471061 ssh_runner.go:195] Run: openssl version
I1003 23:44:22.842818 3471061 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I1003 23:44:22.867674 3471061 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I1003 23:44:22.874564 3471061 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Oct  3 18:14 /usr/share/ca-certificates/minikubeCA.pem
I1003 23:44:22.874635 3471061 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I1003 23:44:22.892314 3471061 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I1003 23:44:22.912819 3471061 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I1003 23:44:22.917627 3471061 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I1003 23:44:22.917670 3471061 kubeadm.go:391] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:7900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/amanchopra:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I1003 23:44:22.917792 3471061 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1003 23:44:22.947110 3471061 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I1003 23:44:22.960130 3471061 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I1003 23:44:22.973200 3471061 kubeadm.go:213] ignoring SystemVerification for kubeadm because of docker driver
I1003 23:44:22.973276 3471061 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1003 23:44:22.986525 3471061 kubeadm.go:154] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1003 23:44:22.986536 3471061 kubeadm.go:156] found existing configuration files:

I1003 23:44:22.986601 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I1003 23:44:22.998924 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I1003 23:44:22.999010 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I1003 23:44:23.017413 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I1003 23:44:23.030504 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I1003 23:44:23.030576 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I1003 23:44:23.049323 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I1003 23:44:23.066052 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I1003 23:44:23.066121 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I1003 23:44:23.087856 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I1003 23:44:23.103875 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I1003 23:44:23.103951 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I1003 23:44:23.119128 3471061 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1003 23:44:23.239335 3471061 kubeadm.go:309] [init] Using Kubernetes version: v1.30.0
I1003 23:44:23.239405 3471061 kubeadm.go:309] [preflight] Running pre-flight checks
W1003 23:44:23.296270 3471061 out.go:239] 💢  initialization failed, will try again: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": wait: remote command exited without exit status or exit signal
stdout:
[init] Using Kubernetes version: v1.30.0
[preflight] Running pre-flight checks

stderr:

I1003 23:44:23.296369 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
W1003 23:44:23.296403 3471061 ssh_runner.go:129] session error, resetting client: EOF
I1003 23:44:23.296420 3471061 retry.go:31] will retry after 240.025876ms: EOF
I1003 23:44:23.537270 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:23.697908 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:23.698019 3471061 retry.go:31] will retry after 216.608973ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:23.915506 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:23.937810 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:23.937917 3471061 retry.go:31] will retry after 809.66696ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:24.747921 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:24.786103 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W1003 23:44:24.786347 3471061 kubeadm.go:863] /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": <nil>
I1003 23:44:24.786512 3471061 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I1003 23:44:24.786599 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:24.855990 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:24.856094 3471061 retry.go:31] will retry after 274.151641ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:25.130477 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:25.157949 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:25.158066 3471061 retry.go:31] will retry after 449.225739ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:25.607525 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:25.639161 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:25.639302 3471061 retry.go:31] will retry after 420.205268ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:26.062513 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:26.093500 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W1003 23:44:26.093625 3471061 kubeadm.go:434] delete failed: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:26.093664 3471061 kubeadm.go:213] ignoring SystemVerification for kubeadm because of docker driver
I1003 23:44:26.093740 3471061 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1003 23:44:26.093784 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:26.134301 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:26.134456 3471061 retry.go:31] will retry after 184.191008ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:26.318854 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:26.352285 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:26.352394 3471061 retry.go:31] will retry after 247.725272ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:26.600910 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:26.636341 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:26.636463 3471061 retry.go:31] will retry after 838.577335ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:27.475709 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:27.497867 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:27.497987 3471061 kubeadm.go:154] config check failed, skipping stale config cleanup: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:27.497997 3471061 kubeadm.go:156] found existing configuration files:

I1003 23:44:27.498069 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I1003 23:44:27.498114 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:27.518115 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:27.518214 3471061 retry.go:31] will retry after 345.328222ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:27.863811 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:27.890811 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:27.890938 3471061 retry.go:31] will retry after 474.287082ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:28.365623 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:28.396388 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:28.396648 3471061 retry.go:31] will retry after 674.068268ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:29.070953 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:29.134017 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:29.134143 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:29.134220 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I1003 23:44:29.134271 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:29.172258 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:29.172387 3471061 retry.go:31] will retry after 193.95046ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:29.366836 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:29.400191 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:29.400337 3471061 retry.go:31] will retry after 362.548848ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:29.764036 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:29.789477 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:29.789607 3471061 retry.go:31] will retry after 470.802037ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:30.261470 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:30.285195 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:30.285313 3471061 kubeadm.go:166] rm failed: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:30.285399 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I1003 23:44:30.285446 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:30.304806 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:30.304933 3471061 retry.go:31] will retry after 340.455869ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:30.646581 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:30.713593 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:30.713751 3471061 retry.go:31] will retry after 512.220358ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:31.226518 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:31.257493 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:31.257592 3471061 retry.go:31] will retry after 440.30441ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:31.698213 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:31.734197 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:31.734345 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:31.734484 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I1003 23:44:31.734550 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:31.759573 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:31.759701 3471061 retry.go:31] will retry after 259.390332ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:32.020329 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:32.047631 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:32.047733 3471061 retry.go:31] will retry after 390.96609ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:32.439348 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:32.490560 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:32.490694 3471061 retry.go:31] will retry after 445.71566ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:32.937524 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:32.960655 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:32.960760 3471061 retry.go:31] will retry after 704.436887ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:33.665512 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:33.693478 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:33.693612 3471061 kubeadm.go:166] rm failed: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:33.693698 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I1003 23:44:33.693761 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:33.723235 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:33.723367 3471061 retry.go:31] will retry after 341.685914ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:34.065986 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:34.104023 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:34.104137 3471061 retry.go:31] will retry after 220.410364ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:34.325671 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:34.383576 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:34.383726 3471061 retry.go:31] will retry after 583.811823ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:34.968627 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:34.998817 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:34.998941 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:34.999033 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I1003 23:44:34.999076 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:35.030492 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:35.030636 3471061 retry.go:31] will retry after 372.809481ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:35.404365 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:35.437039 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:35.437142 3471061 retry.go:31] will retry after 392.773062ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:35.830815 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:35.860863 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:35.860997 3471061 retry.go:31] will retry after 344.811246ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:36.206617 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:36.227591 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:36.227724 3471061 kubeadm.go:166] rm failed: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:36.227803 3471061 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I1003 23:44:36.227866 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:36.254624 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:36.254763 3471061 retry.go:31] will retry after 365.974271ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:36.621419 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:36.661220 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:36.661352 3471061 retry.go:31] will retry after 536.635705ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:37.199089 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:37.227458 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:37.227599 3471061 retry.go:31] will retry after 597.39377ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:37.825379 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:37.870577 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:37.870690 3471061 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:37.870751 3471061 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I1003 23:44:37.870812 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:37.939653 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:37.939770 3471061 retry.go:31] will retry after 263.641304ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:38.204276 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:38.243058 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:38.243166 3471061 retry.go:31] will retry after 484.477501ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:38.727836 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:38.755237 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:38.755338 3471061 retry.go:31] will retry after 647.614151ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:39.403875 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:39.423998 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:39.424105 3471061 retry.go:31] will retry after 422.607748ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:39.847705 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:39.875189 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:39.875305 3471061 kubeadm.go:166] rm failed: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:39.875365 3471061 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I1003 23:44:39.875422 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:39.900310 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:39.900439 3471061 retry.go:31] will retry after 339.624118ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:40.241113 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:40.271836 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:40.271983 3471061 retry.go:31] will retry after 223.170486ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:40.495402 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:40.524046 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:40.524172 3471061 retry.go:31] will retry after 529.381282ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:41.054551 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:41.107640 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:41.107756 3471061 kubeadm.go:393] duration metric: took 18.1900891s to StartCluster
I1003 23:44:41.107822 3471061 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I1003 23:44:41.107888 3471061 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I1003 23:44:41.107933 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:41.160218 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:41.160340 3471061 retry.go:31] will retry after 206.646481ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:41.367794 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:41.429328 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:41.429444 3471061 retry.go:31] will retry after 544.921862ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:41.975267 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:41.996513 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:41.996622 3471061 retry.go:31] will retry after 740.856037ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:42.738747 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:42.767175 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:42.767352 3471061 logs.go:273] Failed to list containers for "kube-apiserver": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:42.767391 3471061 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I1003 23:44:42.767486 3471061 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I1003 23:44:42.767546 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:42.792929 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:42.793040 3471061 retry.go:31] will retry after 135.698822ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:42.929514 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:42.957961 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:42.958094 3471061 retry.go:31] will retry after 192.235291ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:43.150565 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:43.173643 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:43.173759 3471061 retry.go:31] will retry after 312.723759ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:43.487466 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:43.509786 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:43.509892 3471061 retry.go:31] will retry after 530.026558ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:44.040139 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:44.087762 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:44.087892 3471061 logs.go:273] Failed to list containers for "etcd": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:44.087931 3471061 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I1003 23:44:44.088001 3471061 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I1003 23:44:44.088058 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:44.112166 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:44.112272 3471061 retry.go:31] will retry after 342.225122ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:44.454784 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:44.487879 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:44.488023 3471061 retry.go:31] will retry after 385.389475ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:44.873625 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:44.895231 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:44.895426 3471061 retry.go:31] will retry after 742.237025ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:45.638381 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:45.659700 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:45.659833 3471061 logs.go:273] Failed to list containers for "coredns": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:45.659860 3471061 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I1003 23:44:45.659940 3471061 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I1003 23:44:45.659997 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:45.686820 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:45.686942 3471061 retry.go:31] will retry after 264.722767ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:45.952537 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:45.997596 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:45.997709 3471061 retry.go:31] will retry after 461.053567ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:46.459180 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:46.479861 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:46.479985 3471061 retry.go:31] will retry after 708.521071ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:47.189100 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:47.218042 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:47.218188 3471061 logs.go:273] Failed to list containers for "kube-scheduler": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:47.218223 3471061 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I1003 23:44:47.218289 3471061 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I1003 23:44:47.218342 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:47.247180 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:47.247287 3471061 retry.go:31] will retry after 271.712036ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:47.519671 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:47.576461 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:47.576569 3471061 retry.go:31] will retry after 502.82969ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:48.080330 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:48.106308 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:48.106449 3471061 retry.go:31] will retry after 562.988296ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:48.670570 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:48.709473 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:48.709630 3471061 logs.go:273] Failed to list containers for "kube-proxy": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:48.709668 3471061 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I1003 23:44:48.709762 3471061 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I1003 23:44:48.709818 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:48.755883 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:48.755986 3471061 retry.go:31] will retry after 161.514853ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:48.918473 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:48.942621 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:48.942726 3471061 retry.go:31] will retry after 433.852518ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:49.377397 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:49.443035 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:49.443145 3471061 retry.go:31] will retry after 662.015442ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:50.106088 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:50.127987 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:50.128124 3471061 logs.go:273] Failed to list containers for "kube-controller-manager": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:50.128160 3471061 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I1003 23:44:50.128228 3471061 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I1003 23:44:50.128272 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:50.153113 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:50.153215 3471061 retry.go:31] will retry after 243.056729ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:50.396820 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:50.437419 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:50.437551 3471061 retry.go:31] will retry after 196.321713ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:50.635079 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:50.661973 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:50.662094 3471061 retry.go:31] will retry after 805.131066ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:51.467787 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:51.489148 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
E1003 23:44:51.489279 3471061 logs.go:273] Failed to list containers for "kindnet": crictl list: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:51.489313 3471061 logs.go:123] Gathering logs for kubelet ...
I1003 23:44:51.489334 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I1003 23:44:51.489407 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:51.511239 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:51.511347 3471061 retry.go:31] will retry after 364.05733ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:51.875695 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:51.898189 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:51.898319 3471061 retry.go:31] will retry after 274.176883ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:52.173715 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:52.194807 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:52.194937 3471061 retry.go:31] will retry after 730.070027ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:52.925363 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:52.946178 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W1003 23:44:52.946317 3471061 logs.go:130] failed kubelet: command: /bin/bash -c "sudo journalctl -u kubelet -n 400" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port output: 
I1003 23:44:52.946331 3471061 logs.go:123] Gathering logs for dmesg ...
I1003 23:44:52.946342 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I1003 23:44:52.946417 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:52.966633 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:52.966741 3471061 retry.go:31] will retry after 235.252352ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:53.202460 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:53.250802 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:53.250932 3471061 retry.go:31] will retry after 236.284341ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:53.487364 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:53.521741 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:53.521859 3471061 retry.go:31] will retry after 836.954432ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:54.359648 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:54.384165 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W1003 23:44:54.384279 3471061 logs.go:130] failed dmesg: command: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port output: 
I1003 23:44:54.384290 3471061 logs.go:123] Gathering logs for describe nodes ...
I1003 23:44:54.384303 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I1003 23:44:54.384370 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:54.416128 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:54.416249 3471061 retry.go:31] will retry after 260.650765ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:54.677991 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:54.713005 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:54.713129 3471061 retry.go:31] will retry after 513.331166ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:55.226683 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:55.294424 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:55.294551 3471061 retry.go:31] will retry after 654.239098ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:55.950298 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:55.972616 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W1003 23:44:55.972744 3471061 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port output: 
I1003 23:44:55.972756 3471061 logs.go:123] Gathering logs for Docker ...
I1003 23:44:55.972768 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I1003 23:44:55.972830 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:55.993237 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:55.993350 3471061 retry.go:31] will retry after 282.662574ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:56.276897 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:56.314274 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:56.314407 3471061 retry.go:31] will retry after 501.122719ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:56.815773 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:56.852846 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:56.852944 3471061 retry.go:31] will retry after 585.129554ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:57.438919 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:57.462524 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:57.462641 3471061 retry.go:31] will retry after 493.466252ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:57.956491 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:57.993145 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W1003 23:44:57.993258 3471061 logs.go:130] failed Docker: command: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port output: 
I1003 23:44:57.993270 3471061 logs.go:123] Gathering logs for container status ...
I1003 23:44:57.993281 3471061 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I1003 23:44:57.993343 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:58.020864 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:58.020957 3471061 retry.go:31] will retry after 138.42464ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:58.160374 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:58.220435 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:58.220557 3471061 retry.go:31] will retry after 338.192708ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:58.558950 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:58.589327 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:58.589433 3471061 retry.go:31] will retry after 610.236962ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:59.199985 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:59.263725 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I1003 23:44:59.263836 3471061 retry.go:31] will retry after 535.254541ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
I1003 23:44:59.800754 3471061 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W1003 23:44:59.832630 3471061 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W1003 23:44:59.832769 3471061 logs.go:130] failed container status: command: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a" NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port output: 
W1003 23:44:59.832790 3471061 out.go:364] Error starting cluster: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
W1003 23:44:59.832810 3471061 out.go:239] 
W1003 23:44:59.832891 3471061 out.go:239] 💣  Error starting cluster: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
W1003 23:44:59.832908 3471061 out.go:239] 
W1003 23:44:59.841665 3471061 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I1003 23:44:59.843046 3471061 out.go:177] 
W1003 23:44:59.843689 3471061 out.go:239] ❌  Exiting due to GUEST_START: failed to start node: start: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: unable to inspect a not running container to get SSH port
W1003 23:44:59.846276 3471061 out.go:239] 
W1003 23:44:59.848071 3471061 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I1003 23:44:59.852310 3471061 out.go:177] 


